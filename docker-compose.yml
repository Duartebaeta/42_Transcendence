services:
  # gamebackend:
  #   container_name: gamebackend
  #   build:
  #     dockerfile: gamebackend/docker/Dockerfile
  #   expose:
  #     - "9090"
  #   networks:
  #     - app-network
  #   env_file:
  #     - gamebackend/srcs/.env
  #   command: daphne -b 0.0.0.0 -p 9090 gameapi.asgi:application

  users:
    container_name: users
    build: #./users/docker
      dockerfile: users/docker/Dockerfile
    expose:
      - "8000"
    networks:
      - app-network
    env_file:
      - users/srcs/.env
    restart: on-failure
    environment:  
      POSTGRES_DB: db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_PORT: 5432
    depends_on:
      - users-db
    # command: python manage.py runserver 0.0.0.0:8000
  users-db:
    image: postgres:13
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - ./users/srcs/postgres_data:/var/lib/postgres/data
    ports:
      - "5432:5432"

  # user-game-stats:
  #   container_name: user-stats
  #   build: #./user-game-stats/docker
  #     dockerfile: user-game-stats/docker/Dockerfile
  #   volumes:
  #     - ./user-game-stats/srcs/db.sqlite3:/app/db.sqlite3
  #   expose:
  #     - "8080"
  #   networks:
  #     - app-network
  #   env_file:
  #     - user-game-stats/srcs/.env
  #   restart: on-failure
  #   # command: python manage.py runserver 0.0.0.0:8080

  # livechat:
  #   container_name: livechat
  #   build: #./livechat/docker
  #     dockerfile: livechat/docker/Dockerfile
  #   volumes:
  #     - ./livechat/srcs/db.sqlite3:/app/db.sqlite3
  #   expose:
  #     - "9000"
  #   networks:
  #     - app-network
  #   env_file:
  #     - livechat/srcs/.env
  #   restart: on-failure
  #   # command: python manage.py runserver 0.0.0.0:9000

  # nginx:
  #   build:
  #     dockerfile: nginx/Dockerfile
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   environment:
  #     API_URL: ${API_URL}
      
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./nginx/ssl:/etc/nginx/ssl
  #     - ./nginx/frontend:/usr/share/nginx/html
  #   depends_on:
  #     - users
  #     - user-game-stats
  #     - livechat
  #     # - gamebackend
  #   networks:
  #     - app-network
  #   restart: on-failure

networks:
  app-network:
    driver: bridge
